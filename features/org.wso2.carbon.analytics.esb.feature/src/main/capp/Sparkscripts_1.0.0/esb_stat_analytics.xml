<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Analytics>
    <Name>esb_stat_analytics</Name>
    <Script>
        CREATE TEMPORARY TABLE esbFlowEvent USING CompressedEventAnalytics
        OPTIONS(tableName "ESB-FLOW-ENTRY-STREAM",
        schema "messageFlowId STRING, host STRING, hashCode INTEGER, componentName STRING, componentType STRING, componentIndex INT,componentId STRING, startTime LONG, endTime LONG, duration INT, beforePayload STRING, afterPayload STRING, contextPropertyMap STRING, transportPropertyMap STRING, children STRING, entryPoint STRING, entryPointHashcode INTEGER, faultCount INT");

        CREATE TEMPORARY TABLE esbEvent USING CarbonAnalytics
        OPTIONS (tableName "ESB-EVENT",
        schema "messageFlowId FACET -i,  host STRING, hashCode FACET -i, componentName FACET -i, componentType FACET -i, componentIndex INT, componentId FACET -i, startTime LONG -i, endTime LONG -i, duration INT, beforePayload STRING, afterPayload STRING, contextPropertyMap STRING, transportPropertyMap STRING, children STRING, entryPoint FACET -i, entryPointHashcode FACET -i, faultCount INT",
        primaryKeys "messageFlowId, componentId, componentType, componentIndex",
        mergeSchema "false");

        INSERT INTO TABLE esbEvent
        SELECT messageFlowId, host, cast(hashCode as STRING), componentName, componentType, componentIndex, componentId, startTime, endTime, duration, beforePayload, afterPayload, contextPropertyMap, transportPropertyMap, children, entryPoint, cast(entryPointHashcode as STRING), faultCount
        FROM esbFlowEvent;

        CREATE TEMPORARY TABLE esbServiceStatPerSecond USING CarbonAnalytics
        OPTIONS (tableName "ESB-Stat-per-Second",
        schema "year INT -i, month INT -i, day INT -i, hour INT -I, minute INT -i, second INT -i, componentId FACET
        -i, hashCode FACET -i, componentName FACET -i, componentType FACET -i, totalDuration LONG, minDuration INT, maxDuration INT, noOfInvocation LONG -sp,
        faultCount INT, startingTime LONG -i, facetStartTime FACET -i, entryPoint FACET -i, entryPointHashcode FACET -i",
        primaryKeys "year, month, day, hour, minute, second, hashCode, componentId, componentType",
        mergeSchema "false");

        INSERT INTO TABLE esbServiceStatPerSecond
        SELECT year, month, day, hour, minute, second, componentId, hashCode, componentName, componentType, totalDuration, minDuration,
        maxDuration, noOfInvocation, totalFault, getSecondStartingTime(year, month, day, hour, minute, second) as
        startingTime, cast(getSecondStartingTime(year, month, day, hour, minute, second) as STRING) as facetStartTime,
        entryPoint, entryPointHashcode
        FROM
        (SELECT temp.year, temp.month, temp.day, temp.hour, temp.minute, temp.second, temp.componentId,
        temp.hashCode, temp.componentName, temp.componentType, temp.entryPoint, temp.entryPointHashcode, sum(duration) as totalDuration,
        count(*) as noOfInvocation, sum(faultCount) as totalFault, min(duration) as minDuration, max(duration) as
        maxDuration FROM
        (SELECT getYear(startTime) as year, getMonth(startTime) as month, getDay(startTime) as day, getHour(startTime)
        as hour, getMinute(startTime) as minute, getSeconds(startTime) as second, duration as duration, hashCode,
        componentName, componentType, componentId, (CASE WHEN faultCount > 0 then 1 ELSE 0 END) as faultCount, entryPoint, entryPointHashcode FROM
        esbFlowEvent) temp
        WHERE temp.componentType = "Proxy Service" OR temp.componentType = "API" OR temp.componentType = "Endpoint"
        GROUP BY temp.year, temp.month, temp.day, temp.hour, temp.minute, temp.second, temp.componentId,
        temp.hashCode, temp.componentName, temp.componentType, temp.entryPoint,  temp.entryPointHashcode) result;

        CREATE TEMPORARY TABLE esbServiceStatPerMinute USING CarbonAnalytics
        OPTIONS (tableName "ESB-Stat-per-Minute",
        schema "year INT -i, month INT -i, day INT -i, hour INT -i, minute INT -i, componentId FACET -i, hashCode FACET
        -i, componentName FACET -i, componentType FACET -i, totalDuration LONG, minDuration INT, maxDuration INT,
        noOfInvocation LONG -sp, faultCount INT, startingTime LONG -i, facetStartTime FACET -i, entryPoint FACET -i, entryPointHashcode FACET -i",
        primaryKeys "year, month, day, hour, minute, hashCode, componentId, componentType",
        mergeSchema "false");

        INSERT INTO TABLE esbServiceStatPerMinute
        SELECT year, month, day, hour, minute, componentId, hashCode, componentName, componentType, totalDuration, minDuration, maxDuration, noOfInvocation, totalFault, getMinuteStartingTime(year, month, day, hour, minute) as startingTime, cast(getMinuteStartingTime(year, month, day, hour, minute) as STRING) as facetStartTime, entryPoint, entryPointHashcode FROM
        (SELECT temp.year, temp.month, temp.day, temp.hour, temp.minute, temp.componentId, temp.hashCode, temp.componentName, temp.componentType, temp.entryPoint, temp.entryPointHashcode, sum(duration) as totalDuration, sum(faultCount) as totalFault, count(*) as noOfInvocation, min(duration) as minDuration, max(duration) as maxDuration FROM
        (SELECT getYear(startTime) as year, getMonth(startTime) as month, getDay(startTime) as day, getHour(startTime) as hour,  getMinute(startTime) as minute, duration as duration, hashCode, componentName, componentType, componentId, (CASE WHEN faultCount > 0 then 1 ELSE 0 END) as faultCount, entryPoint, entryPointHashcode FROM esbFlowEvent) temp
        WHERE temp.componentType = "Proxy Service" OR temp.componentType = "API" OR temp.componentType = "Endpoint"
        GROUP BY temp.year, temp.month, temp.day, temp.hour, temp.minute, temp.componentId, temp.hashCode,
        temp.componentName, temp.componentType, temp.entryPoint, temp.entryPointHashcode) result;

        CREATE TEMPORARY TABLE esbServiceStatPerHour USING CarbonAnalytics
        OPTIONS (tableName "ESB-Stat-per-Hour",
        schema "year INT -i, month INT -i, day INT -i, hour INT -I, componentId FACET -i, hashCode FACET -i, componentName FACET -i, componentType FACET -i,
        totalDuration LONG, minDuration INT, maxDuration INT, noOfInvocation LONG -sp, faultCount INT, startingTime
        LONG -i, facetStartTime FACET -i, entryPoint FACET -i, entryPointHashcode FACET -i",
        primaryKeys "year, month, day, hour, hashCode, componentId, componentType",
        mergeSchema "false");

        INSERT INTO TABLE esbServiceStatPerHour
        SELECT year, month, day, hour, componentId, hashCode, componentName, componentType, totalDuration, minDuration, maxDuration,
        noOfInvocation, totalFault, getHourStartingTime(year, month, day, hour) as startingTime,
        cast(getHourStartingTime(year, month, day, hour) as STRING) as facetStartTime, entryPoint, entryPointHashcode FROM
        (SELECT temp.year, temp.month, temp.day, temp.hour, temp.componentId, temp.hashCode, temp.componentName, temp.componentType, temp.entryPoint, temp.entryPointHashcode, sum(duration) as totalDuration, sum(faultCount) as totalFault, min(duration) as minDuration, max(duration) as maxDuration, count(*) as noOfInvocation FROM
        (SELECT getYear(startTime) as year, getMonth(startTime) as month, getDay(startTime) as day, getHour(startTime) as hour, duration as duration, hashCode, componentName, componentType, componentId, (CASE WHEN faultCount > 0 then 1 ELSE 0 END) as faultCount, entryPoint, entryPointHashcode FROM esbFlowEvent) temp
        WHERE temp.componentType = "Proxy Service" OR temp.componentType = "API" OR temp.componentType = "Endpoint"
        GROUP BY temp.year, temp.month, temp.day, temp.hour, temp.componentId, temp.hashCode, temp.componentName, temp.componentType, temp.entryPoint, temp.entryPointHashcode) result;

        CREATE TEMPORARY TABLE esbServiceStatPerDay USING CarbonAnalytics
        OPTIONS (tableName "ESB-Stat-per-Day",
        schema "year INT -i, month INT -i, day INT -i, componentId FACET -i, hashCode FACET -i, componentName FACET -i, componentType FACET -i, totalDuration
        LONG, minDuration INT, maxDuration INT, noOfInvocation LONG -sp, faultCount INT, startingTime LONG -i,
        facetStartTime FACET -i, entryPoint FACET -i, entryPointHashcode FACET -i",
        primaryKeys "year, month, day, hashCode, componentId, componentType",
        mergeSchema "false");

        INSERT INTO TABLE esbServiceStatPerDay
        SELECT year, month, day, componentId, hashCode, componentName, componentType, totalDuration, minDuration, maxDuration, noOfInvocation,
        totalFault, getDateStartingTime(year, month, day) as startingTime, cast(getDateStartingTime(year, month, day) as
        STRING) as facetStartTime, entryPoint, entryPointHashcode FROM
        (SELECT temp.year, temp.month, temp.day, temp.componentId, temp.hashCode, temp.componentName, temp.componentType, temp.entryPoint, temp.entryPointHashcode, sum(duration) as totalDuration, sum(faultCount) as totalFault, min(duration) as minDuration, max(duration) as maxDuration, count(*) as noOfInvocation FROM
        (SELECT getYear(startTime) as year, getMonth(startTime) as month, getDay(startTime) as day, duration as duration, hashCode, componentName, componentType, componentId, (CASE WHEN faultCount > 0 then 1 ELSE 0 END) as faultCount, entryPoint, entryPointHashcode FROM esbFlowEvent) temp
        WHERE temp.componentType = "Proxy Service" OR temp.componentType = "API" OR temp.componentType = "Endpoint"
        GROUP BY temp.year, temp.month, temp.day, temp.componentId, temp.hashCode, temp.componentName, temp.componentType, temp.entryPoint, temp.entryPointHashcode) result;

        CREATE TEMPORARY TABLE esbServiceStatPerMonth USING CarbonAnalytics
        OPTIONS (tableName "ESB-Stat-per-Month",
        schema "year INT -i, month INT -i, componentId FACET -i, hashCode FACET -i, componentName FACET -i, componentType FACET -i, totalDuration LONG,
        minDuration INT, maxDuration INT, noOfInvocation LONG -sp, faultCount INT, startingTime LONG -i,
        facetStartTime FACET -i, entryPoint FACET -i, entryPointHashcode FACET -i",
        primaryKeys "year, month, hashCode, componentId, componentType",
        mergeSchema "false");

        INSERT INTO TABLE esbServiceStatPerMonth
        SELECT year, month, componentId, hashCode, componentName, componentType, totalDuration, minDuration, maxDuration, noOfInvocation,
        totalFault, getMonthStartingTime(year, month) as startingTime, cast(getMonthStartingTime(year, month) as STRING)
        as facetStartTime, entryPoint, entryPointHashcode FROM
        (SELECT temp.year, temp.month, temp.componentId, temp.hashCode, temp.componentName, temp.componentType,
        sum(duration) as totalDuration, sum(faultCount) as totalFault, min(duration) as minDuration, max(duration) as
        maxDuration, count(*) as noOfInvocation, temp.entryPoint, temp.entryPointHashcode FROM
        (SELECT getYear(startTime) as year, getMonth(startTime) as month, duration as duration, hashCode, componentName, componentType, componentId, (CASE WHEN faultCount > 0 then 1 ELSE 0 END) as faultCount, entryPoint, entryPointHashcode FROM esbFlowEvent) temp
        WHERE temp.componentType = "Proxy Service" OR temp.componentType = "API" OR temp.componentType = "Endpoint"
        GROUP BY temp.year, temp.month, temp.componentId, temp.hashCode, temp.componentName, temp.componentType, temp.entryPoint, temp.entryPointHashcode) result;
        
	CREATE TEMPORARY TABLE mediatorStatPerSecond USING CarbonAnalytics
        OPTIONS (tableName "mediator-stat-per-second",
        schema "year INT -i, month INT -i, day INT -i, hour INT -I, minute INT -i, second INT -i, entryPoint FACET
        -i, entryPointHashcode FACET -i, componentIndex INT, componentId FACET -i, hashCode FACET -i, componentName FACET -i, componentType FACET -i, totalDuration LONG, minDuration INT,
        maxDuration INT, noOfInvocation LONG -sp, faultCount INT, startingTime LONG -i, facetStartTime FACET -i",
	primaryKeys "year, month, day, hour, minute, second, hashCode, componentId, componentType",
	mergeSchema "false");

        INSERT INTO TABLE mediatorStatPerSecond
        SELECT temp.year, temp.month, temp.day, temp.hour, temp.minute, temp.second, temp.entryPoint, temp.entryPointHashcode,
        temp.componentIndex, temp.componentId, temp.hashCode, temp.componentName, temp.componentType, sum(duration) as totalDuration, min(duration) as
        minDuration, max(duration) as maxDuration, count(*) as noOfInvocation, sum(faultCount) as totalFault,
        getSecondStartingTime(temp.year, temp.month, temp.day, temp.hour, temp.minute, temp.second) as startingTime,
        cast(getSecondStartingTime(year, month, day, hour, minute, second) as STRING) as facetStartTime
	FROM (SELECT getYear(startTime) as year, getMonth(startTime) as month, getDay(startTime) as day, getHour(startTime) as hour, getMinute(startTime) as minute, getSeconds(startTime) as second, duration as duration, entryPoint, entryPointHashcode, componentIndex, hashCode, componentName, componentType, componentId, (CASE WHEN faultCount > 0 then 1 ELSE 0 END) as faultCount FROM esbFlowEvent) temp 
	GROUP BY temp.year, temp.month, temp.day, temp.hour, temp.minute, temp.second, temp.entryPoint, temp.entryPointHashcode, temp.componentIndex, temp.componentId, temp.hashCode, temp.componentName, temp.componentType;   

	CREATE TEMPORARY TABLE mediatorStatPerMinute USING CarbonAnalytics
        OPTIONS (tableName "mediator-stat-per-minute",
        schema "year INT -i, month INT -i, day INT -i, hour INT -I, minute INT -i, entryPoint FACET -i, entryPointHashcode FACET -i, 
        componentIndex INT, componentId FACET -i, hashCode FACET -i, componentName FACET -i, componentType FACET -i, totalDuration LONG, minDuration INT,
        maxDuration INT, noOfInvocation LONG -sp, faultCount INT, startingTime LONG -i, facetStartTime FACET -i",
	primaryKeys "year, month, day, hour, minute, hashCode, componentId, componentType",
	mergeSchema "false");

        INSERT INTO TABLE mediatorStatPerMinute
        SELECT temp.year, temp.month, temp.day, temp.hour, temp.minute, temp.entryPoint, temp.entryPointHashcode, temp.componentIndex,
        temp.componentId, temp.hashCode, temp.componentName, temp.componentType, sum(duration) as totalDuration, min(duration) as minDuration,
        max(duration) as maxDuration, count(*) as noOfInvocation, sum(faultCount) as totalFault,
        getMinuteStartingTime(temp.year, temp.month, temp.day, temp.hour, temp.minute) as startingTime,
        cast(getMinuteStartingTime(temp.year, temp.month, temp.day, temp.hour, temp.minute) as STRING) as facetStartTime
	FROM (SELECT getYear(startTime) as year, getMonth(startTime) as month, getDay(startTime) as day, getHour(startTime) as hour, getMinute(startTime) as minute, duration as duration, entryPoint, entryPointHashcode, componentIndex, hashCode, componentName, componentType, componentId, (CASE WHEN faultCount > 0 then 1 ELSE 0 END) as faultCount FROM esbFlowEvent) temp
	GROUP BY temp.year, temp.month, temp.day, temp.hour, temp.minute, temp.entryPoint, temp.entryPointHashcode, temp.componentIndex, temp.componentId, temp.hashCode, temp.componentName, temp.componentType;

	CREATE TEMPORARY TABLE mediatorStatPerHour USING CarbonAnalytics
        OPTIONS (tableName "mediator-stat-per-hour",
        schema "year INT -i, month INT -i, day INT -i, hour INT -I, entryPoint FACET -i, entryPointHashcode FACET -i, componentIndex INT,
        hashCode FACET -i, componentName FACET -i, componentId FACET -i, componentType FACET -i, totalDuration LONG, minDuration INT, maxDuration INT,
        noOfInvocation LONG -sp, faultCount INT, startingTime LONG -i, facetStartTime FACET -i",
	primaryKeys "year, month, day, hour, hashCode, componentId, componentType",
	mergeSchema "false");

        INSERT INTO TABLE mediatorStatPerHour
        SELECT temp.year, temp.month, temp.day, temp.hour, temp.entryPoint, temp.entryPointHashcode, temp.componentIndex, temp.componentId, temp.hashCode, 
	temp.componentName, temp.componentType, sum(duration) as totalDuration, min(duration) as minDuration, max(duration) as maxDuration,
        count(*) as noOfInvocation, sum(faultCount) as totalFault, getHourStartingTime(temp.year, temp.month, temp.day,
        temp.hour) as startingTime, cast(getHourStartingTime(temp.year, temp.month, temp.day, temp.hour) as STRING) as
        facetStartTime
	FROM (SELECT getYear(startTime) as year, getMonth(startTime) as month, getDay(startTime) as day, getHour(startTime) as hour, duration as duration, entryPoint, entryPointHashcode, componentIndex, hashCode, componentName, componentType, componentId, (CASE WHEN faultCount > 0 then 1 ELSE 0 END) as faultCount FROM esbFlowEvent) temp
	GROUP BY temp.year, temp.month, temp.day, temp.hour, temp.entryPoint, temp.entryPointHashcode, temp.componentIndex, temp.componentId, temp.hashCode, temp.componentName, temp.componentType;

	CREATE TEMPORARY TABLE mediatorStatPerDay USING CarbonAnalytics
        OPTIONS (tableName "mediator-stat-per-day",
        schema "year INT -i, month INT -i, day INT -i, entryPoint FACET -i, entryPointHashcode FACET -i, componentIndex INT, componentId FACET -i,
        hashCode FACET -i, componentName FACET -i, componentType FACET -i, totalDuration LONG, minDuration INT, maxDuration INT, noOfInvocation LONG -sp,
        faultCount INT, startingTime LONG -i, facetStartTime FACET -i",
	primaryKeys "year, month, day, hashCode, componentId, componentType",
	mergeSchema "false");

        INSERT INTO TABLE mediatorStatPerDay
        SELECT temp.year, temp.month, temp.day, temp.entryPoint, temp.entryPointHashcode, temp.componentIndex, temp.componentId, temp.hashCode, temp.componentName, 
        temp.componentType, sum(duration) as totalDuration, min(duration) as minDuration, max(duration) as maxDuration,
        count(*) as noOfInvocation, sum(faultCount) as totalFault, getDateStartingTime(temp.year, temp.month, temp.day)
        as startingTime, cast(getDateStartingTime(temp.year, temp.month, temp.day) as STRING) as facetStartTime
	FROM (SELECT getYear(startTime) as year, getMonth(startTime) as month, getDay(startTime) as day, duration as duration, entryPoint, entryPointHashcode, componentIndex, hashCode, componentName, componentType, componentId, (CASE WHEN faultCount > 0 then 1 ELSE 0 END) as faultCount FROM esbFlowEvent) temp
	GROUP BY temp.year, temp.month, temp.day, temp.entryPoint, temp.entryPointHashcode, temp.componentIndex, temp.componentId, temp.hashCode, temp.componentName, temp.componentType;

	CREATE TEMPORARY TABLE mediatorStatPerMonth USING CarbonAnalytics
        OPTIONS (tableName "mediator-stat-per-month",
        schema "year INT -i, month INT -i, entryPoint FACET -i, entryPointHashcode FACET -i, componentIndex INT, componentId FACET -i,
        hashCode FACET -i, componentName FACET -i, componentType FACET -i, totalDuration LONG, minDuration INT, maxDuration INT, noOfInvocation LONG -sp,
        faultCount INT, startingTime LONG -i, facetStartTime FACET -i",
	primaryKeys "year, month, hashCode, componentId, componentType",
	mergeSchema "false");

        INSERT INTO TABLE mediatorStatPerMonth
        SELECT temp.year, temp.month, temp.entryPoint, temp.entryPointHashcode, temp.componentIndex, temp.componentId, temp.hashCode, temp.componentName, temp.componentType,
        sum(duration) as totalDuration, min(duration) as minDuration, max(duration) as maxDuration, count(*) as
        noOfInvocation, sum(faultCount) as totalFault, getMonthStartingTime(temp.year, temp.month) as startingTime,
        cast(getMonthStartingTime(temp.year, temp.month) as STRING) as facetStartTime
	FROM (SELECT getYear(startTime) as year, getMonth(startTime) as month, duration as duration, entryPoint, entryPointHashcode, componentIndex, hashCode, componentName, componentType, componentId, (CASE WHEN faultCount > 0 then 1 ELSE 0 END) as faultCount FROM esbFlowEvent) temp
	GROUP BY temp.year, temp.month, temp.entryPoint, temp.entryPointHashcode, temp.componentIndex, temp.componentId, temp.hashCode, temp.componentName, temp.componentType;
    </Script>
    <CronExpression>0 * * * * ?</CronExpression>
</Analytics>
